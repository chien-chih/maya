{"version":3,"sources":["ai.js","ai.ts","button/button.ts"],"names":["System","register","exports_1","lettersRegexp","LettersOnlyValidator","numberRegexp","ZipCodeValidator","setters","execute","LettersOnlyValidator.isAcceptable","ZipCodeValidator.isAcceptable","core_1","HelloWorld","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","core_1_1","HelloWorld.constructor"],"mappings":"AAAAA,OAAOC,SAAS,WAAY,SAASC,GACjC,GCIAC,GAAaC,EAObC,EAAYC,CDVZ,QACIC,WACAC,QAAS,WCCbL,EAAgB,cACpBC,EAAA,WAAAA,QAAAA,MAIAA,MAHIA,GAAAA,UAAAA,aAAAA,SAAaA,GACTK,MAAOA,GAAcA,KAAKA,IAElCL,KAJAF,EAAA,uBAAAE,GAMIC,EAAe,WACnBC,EAAA,WAAAA,QAAAA,MAIAA,MAHIA,GAAAA,UAAAA,aAAAA,SAAaA,GACTI,MAAoBA,KAAbA,EAAEA,QAAgBA,EAAaA,KAAKA,IAEnDJ,KAJAJ,EAAA,mBAAAI,ODgBAN,OAAOC,SAAS,oBAAoB,iBAAkB,SAASC,GAC3D,GASIS,GACAC,EAVAC,EAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAQ,EAAJH,EAAQJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAS,EAAJH,EAAQD,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,MAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAgCP,QAAQO,SAASF,EAAGC,GAAtG,OAIJ,QACIzB,SACI,SAAU2B,GACNvB,EAASuB,IAEjB1B,QAAS,WE3CjBI,EAAA,WAAAA,QAAAA,KASIuB,KAAAA,SAAmBA,GACvBvB,MAVAA,GAAAA,GAACA,EAAAA,WAEGA,SAAUA,cAEVA,SAAUA,UFiDMkB,EAAW,yBACZlB,MEtDnBV,EAAA,aAAAU","file":"ai.js","sourcesContent":["System.register('ai/ai',[], function(exports_1) {\n    var lettersRegexp, LettersOnlyValidator, numberRegexp, ZipCodeValidator;\n    return {\n        setters:[],\n        execute: function() {\n            lettersRegexp = /^[A-Za-z]+$/;\n            LettersOnlyValidator = (function () {\n                function LettersOnlyValidator() {\n                }\n                LettersOnlyValidator.prototype.isAcceptable = function (s) {\n                    return lettersRegexp.test(s);\n                };\n                return LettersOnlyValidator;\n            })();\n            exports_1(\"LettersOnlyValidator\", LettersOnlyValidator);\n            numberRegexp = /^[0-9]+$/;\n            ZipCodeValidator = (function () {\n                function ZipCodeValidator() {\n                }\n                ZipCodeValidator.prototype.isAcceptable = function (s) {\n                    return s.length === 5 && numberRegexp.test(s);\n                };\n                return ZipCodeValidator;\n            })();\n            exports_1(\"ZipCodeValidator\", ZipCodeValidator);\n        }\n    }\n});\n\nSystem.register('ai/button/button',['angular2/core'], function(exports_1) {\n    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    };\n    var __metadata = (this && this.__metadata) || function (k, v) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n    };\n    var core_1;\n    var HelloWorld;\n    return {\n        setters:[\n            function (core_1_1) {\n                core_1 = core_1_1;\n            }],\n        execute: function() {\n            HelloWorld = (function () {\n                function HelloWorld() {\n                    this.yourName = '';\n                }\n                HelloWorld = __decorate([\n                    core_1.Component({\n                        selector: 'hello-world',\n                        template: 'hello'\n                    }), \n                    __metadata('design:paramtypes', [])\n                ], HelloWorld);\n                return HelloWorld;\n            })();\n            exports_1(\"HelloWorld\", HelloWorld);\n        }\n    }\n});\n","\nexport interface StringValidator {\n    isAcceptable(s: string): boolean;\n}    \n\nvar lettersRegexp = /^[A-Za-z]+$/;\nexport class LettersOnlyValidator implements StringValidator {\n    isAcceptable(s: string) {        \n        return lettersRegexp.test(s);\n    }\n}\n\nvar numberRegexp = /^[0-9]+$/;\nexport class ZipCodeValidator implements StringValidator {\n    isAcceptable(s: string) {        \n        return s.length === 5 && numberRegexp.test(s);\n    }  \n}     \n\n \n\n\n","\nimport {Component} from 'angular2/core';\n\n@Component({\n    // Declare the tag name in index.html to where the component attaches\n    selector: 'hello-world',\n    // Location of the template for this component\n    template: 'hello'\n})\n\nexport class HelloWorld {\n    // Declaring the variable for binding with initial value\n    yourName: string = '';\n}\n  \n  \n\n"],"sourceRoot":"/source/"}